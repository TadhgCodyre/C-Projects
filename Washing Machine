#include "stdafx.h"
#include <stdio.h>
#include <string.h>


typedef enum  callStatus { idle, washing, rinsing, spin_dry, complete } status;
typedef enum  inputs { S, W, R, D, E} user;
status startWashing(status currentStatus);
status washComplete(status currentStatus);
status rinseComplete(status currentStatus);
status spin_dryComplete(status currentStatus);
char getInput();
void printStatus(status currentStatus);

void main(void)
{
	char input;
	status currentStatus = idle;
	printStatus(currentStatus);

	do
	{
		input = getInput();
		switch (input)
		{
		case 'S':
			currentStatus = startWashing(currentStatus);
			break;
		case 'W':
			currentStatus = washComplete(currentStatus);
			break;
		case 'R':
			currentStatus = rinseComplete(currentStatus);
			break;
		case 'D':
			currentStatus = spin_dryComplete(currentStatus);
			break;
		case 'E':
			puts("Exiting............");
			break;
		default:
			puts("illegal input");
			break;
		}

		printStatus(currentStatus);

	} while (1);

}

status startWashing(status currentStatus)
{
	status newStatus;

	if (currentStatus == idle)
	{
		newStatus = washing;
	}
	else
	{
		puts("error - can only wash after being idle!");
		newStatus = currentStatus;
	}

	return newStatus;
}

status washComplete(status currentStatus)
{
	status newStatus;

	if (currentStatus == washing)
	{
		newStatus = rinsing;
	}
	else
	{
		puts("error - can only rinse after being washed!");
		newStatus = currentStatus;
	}

	return newStatus;
}
status rinseComplete(status currentStatus)
{
	status newStatus;

	if (currentStatus == rinsing)
	{
		newStatus = complete;
	}
	else if (currentStatus == complete)
	{
		newStatus = spin_dry;
	}
	else
	{
		puts("error - cannot begin spin-drying when rinsing isn't complete!");
		newStatus = currentStatus;
	}

	return newStatus;
}

status spin_dryComplete(status currentStatus)
{
	status newStatus;

	if (currentStatus == spin_dry)
	{
		newStatus = idle;
	}
	else
	{
		puts("error - can only return to idle after spin-drying!");
		newStatus = currentStatus;
	}

	return newStatus;
}

char getInput()
{
	char input;

	printf("Enter 'S' to send the 'Start Washing' signal\n");
	printf("Enter 'W' to send the 'Wash complete' signal\n");
	printf("Enter 'R' to send the 'Rinse complete' cycle\n");
	printf("Enter 'D' to send the 'Spin-Dry complete' signal\n");
	printf("input:");
	scanf_s(" %c", &input);
	return input;
}

void printStatus(status currentStatus)
{

	switch (currentStatus)
	{
	case idle:
		printf("Current Status = IDLE\n");
		break;
	case washing:
		printf("Current Status = WASHING\n");
		break;
	case rinsing:
		printf("Current Status = RINSING\n");
		break;
	case spin_dry:
		printf("Current Status = SPIN-DRYING\n");
		break;
	default:
		printf("SEVERE ERROR - CURRENT STATUS UNKNOWN");
		break;
	}

}
